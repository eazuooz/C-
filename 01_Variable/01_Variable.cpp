// 01_Variable.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

int main()
{
	// 컴퓨터에 숫작를 저장하는 방법
	// 메모리 단위(Byte)
	// 1 Byte ==> 8 bit
	// 1 bit (0, 1) ==> 경우의 수 2가지
	// 8 비트, 2^8 ==> 256 가지
	// 8 비트의 조합을 정수에 대입 할 경우 0 ~ 255, -128 ~0~ 127


	// 자료형(Data Type)
	// 정수형
	// char(1), short(2) int(4), long(4), long long(8) ...
	unsigned int a = 0;
	short s = 0;

	// 모든 비트를 1로 채움
	// 양수로 보면 255, 음수로 보면 -1
	char c = 255;

	// 음수 비트 찾기
	// 2의 보수법
	// 양수의 비트를 반전 시킨 후, 1 을 더한다
	//5(10) = 0000 0000 0000 0000 0000 0000 0000 0101(2)
	//	만약 - 5 를 표현한다고 한다면 어떻게 하면 될까요 ? 앞서 말했듯 최상위 비트(가장 왼쪽의 비트)를 이용한다고 했죠.
	//	0일 때는 양수, 1일 때는 음수라고 약속하고 이를 이용하면 됩니다.즉, 5(10)에서 가장 왼쪽의 비트를 바꿔주는 것입니다.
	//	-5(10) = 1 000 0000 0000 0000 0000 0000 0000 0101(2)
	//	이렇게 최상위 비트를 이용하는 방식을 이용하면 음수를 표현 할 수 있죠.이 때 최상위 비트를 MSB(Most Significant Bit) 라고도 합니다.

	// 16진수
	// 0xff, 255 , 8개의 비트가 1로 채워짐
	// 0xffffffff

	// 실수형
	// float(4), double(8)
	// 부동 소수점
	// 0 ~ 1
	float f = 0.3333333333f;

	// 실수의 우선순위가 정수보다 더 높다
	// 정수 변수와 실수 변수간에 연산을 진행 할 경우 명시적인 변환이 없으면 정수를 실수표현으로 변경한다.


	// if 조건문
	// 0 이 아닌 수(참), 0 거짓 
	// 비교 연산자 (두 피 연산자를 비교하여 참(1) 또는 거짓(0)을 반환)
	int k = 0 == 0;

	// if, else if, else
	// 해당 조건중 하나만 실행, else 는 모든 조건이 실패했을 때 수행
	// if 는 독립적으로 만들어야 하는 경우도 있음
	if (0 == 0)
	{

	}
	else if (1)
	{

	}

	if (1)
	{

	}

	//switch ()
	//{
	//default:
	//	break;
	//}

	// while 반복문
	// while, do while, for




    return 0;
}

